<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="kr.co.belocal.web.repository.AuthRepository">

    <!--현재 비밀번호 확인-->
    <select id="checkPw" resultType="String">
        SELECT pw FROM member WHERE id = #{memberId}
    </select>

    <!--아이디 중복 확인-->
    <select id="isIdDuplicate" resultType="String">
        SELECT user_id FROM member WHERE user_id = #{userId}
    </select>
    <!--닉네임 중복 확인-->
    <select id="isNicknameDuplicate" resultType="String">
        SELECT nickname FROM member WHERE nickname = #{nickname}
    </select>
    <!--휴대폰 중복 확인-->
    <select id="isPhoneNumDuplicate" resultType="String">
        SELECT phone_num FROM member WHERE phone_num = #{phoneNum}
    </select>

    <!--회원정보검색-->
    <select id="findAll" resultType="Member">
        SELECT * FROM member WHERE id = #{id}
    </select>

    <!--로그인-->
    <select id="login" resultType="Member">
        SELECT * FROM member WHERE user_id = #{userId}
    </select>

    <!--회원 권한 조회-->
    <select id="getMemberRole" resultType="MemberRoleView">
        SELECT role FROM member_role_view where member_id = #{memberId}
    </select>


    <!--아이디 찾기-->
    <select id="findByUserId" resultType="String">
        SELECT user_id FROM member WHERE phone_num = #{phoneNum}
    </select>
    <!--비밀번호 찾기-->
    <select id="getFindPw" resultType="Integer">
        SELECT id FROM member WHERE user_id = #{userId} and phone_num = #{phoneNum}
    </select>

    <update id="updateTemporaryPwd" parameterType="Member">
        UPDATE member
            <set>
                <if test="pw != null">pw = #{pw},</if>
            </set>
        WHERE id = #{id};
    </update>


    <!--회원가입-->
    <insert id="save" parameterType="Member" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO member
        (
            user_id,
            pw,
            nickname,
            name,
            phone_num,
            birth_date
        )
        VALUES
        (
            #{userId},
            #{pw},
            #{nickname},
            #{name},
            #{phoneNum},
            #{birthDate}
        );
    </insert>

    <!--회원 권한 조회-->
    <select id="findByRole" parameterType="Integer">
        SELECT * FROM role
        WHERE
            member_id = #{memberId}
        and
            role_type_id = 3;
    </select>
    <!--회원 기본 권한 추가-->
    <insert id="addRole" parameterType="int">
        INSERT INTO role
        ( member_id )
        VALUES
        ( #{id} );
    </insert>
    <!--회원 가이드 권한 추가-->
    <insert id="addGuideRole" parameterType="Role">
        INSERT INTO role
        (
            member_id,
            role_type_id
        )
        VALUES
        (
            #{memberId},
            #{roleTypeId}
        );
    </insert>

    <!--회원 정보 수정-->
    <update id="update" parameterType="Member">
        UPDATE member
            <set>
                <if test="profilePic != null">profile_pic = #{profilePic},</if>
                <if test="pw != null">pw = #{pw},</if>
                <if test="nickname != null">nickname = #{nickname},</if>
                <if test="phoneNum != null">phone_num = #{phoneNum}</if>
            </set>
            WHERE id = #{id};
    </update>

    <!--회원탈퇴-->
    <update id="delete" parameterType="Member">
        UPDATE member
        <set>
            is_withdrawl = #{isWithdrawl}
        </set>
        WHERE id = #{id};
    </update>

    <!--회원 기본이미지 저장-->
    <insert id="addDefaultImg" parameterType="ProfileImage">
        INSERT INTO profile_image
        (
            member_id,
            name,
            path,
            uuid
        )
        VALUES
        (
            #{memberId},
            #{name},
            #{path},
            #{uuid}
        );
    </insert>


</mapper>
